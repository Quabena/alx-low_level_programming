# Compiler to use
CC = gcc

# Source files
SRC = main.c school.c

# Object files (converted from source files)
OBJ = $(SRC:.c=.o)

# Name of the executable
NAME = school

# Compiler flags for strict compilation
CFLAGS = -Wall -Werror -Wextra -pedantic

# Declare non-file targets to avoid conflicts with file names
.PHONY: all clean oclean fclean re

# The 'all' rule is the default rule that builds the executable
all: m.h $(OBJ)
	# Link the object files to create the executable
	$(CC) $(OBJ) -o $(NAME)

# The 'clean' rule removes Emacs and Vim temporary files, as well as the executable
clean:
	# Remove Emacs/Vim temporary files (*~) and the executable
	$(RM) *~ $(NAME)

# The 'oclean' rule removes the object files
oclean:
	# Remove object files (.o)
	$(RM) $(OBJ)

# The 'fclean' rule calls 'clean' and 'oclean' to remove all temporary files and compiled files
fclean: clean oclean

# The 're' rule forces recompilation by removing object files and rebuilding everything
re: oclean all

